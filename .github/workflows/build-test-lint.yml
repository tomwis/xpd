# This workflow will build a .NET project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-net

name: Build, Test, Lint

on:
    push:
    workflow_dispatch:

permissions:
    actions: read
    checks: write
    contents: write
    pull-requests: write

jobs:
    build-and-test:
        name: Build and Test
        runs-on: macos-14
        steps:
            - uses: actions/checkout@v4
            - name: Setup .NET
              uses: actions/setup-dotnet@v4
              with:
                  dotnet-version: 8.0.x
            - name: Install dotnet workloads
              run: dotnet workload install maui ios android maui-ios maui-android
            - name: Restore dependencies
              run: dotnet restore
            - name: Build
              run: dotnet build --no-restore
            - name: Test
              run: dotnet test --no-build --verbosity normal --logger "trx;LogFileName=TestResults.trx"
            - name: Test Reporter
              uses: dorny/test-reporter@v1
              with:
                name: Test Results
                path: '**/TestResults/*.trx'
                reporter: dotnet-trx

    format:
        name: Format Code
        runs-on: macos-14
        steps:
            - uses: actions/checkout@v4
            - name: Setup .NET
              uses: actions/setup-dotnet@v4
              with:
                  dotnet-version: 8.0.x
            - name: Install CSharpier
              run: dotnet tool install csharpier
            - name: Format with CSharpier
              run: dotnet csharpier .
            - name: Format with dotnet format
              run: |
                  dotnet format style
                  dotnet format analyzers
            - name: Build
              run: dotnet build
            - name: Push changes
              run: |
                  git add .
                  git diff --cached --quiet && echo "No formatting changes found. Exiting." && exit 0

                  git config --global user.name "github-actions[bot]"
                  git config --global user.email "github-actions[bot]@users.noreply.github.com"

                  CURRENT_DATETIME=$(date +'%Y-%m-%d-%H-%M-%S')
                  BRANCH_NAME="auto/reformat-$CURRENT_DATETIME"
                  echo "SOURCE_BRANCH=$BRANCH_NAME" >> $GITHUB_ENV

                  git commit --no-verify -m "style: automatic code formatting by GitHub workflow"
                  echo "Pushing changes to branch $BRANCH_NAME"
                  git push origin HEAD:$BRANCH_NAME
            - name: Create Pull Request
              if: env.SOURCE_BRANCH != ''
              env:
                  Target_Branch: ${{ github.ref_name }}
                  GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
              run: >
                  gh pr create
                  --title "Auto code formatting"
                  --body "This PR applies automated code formatting done in GitHub workflow."
                  --base $Target_Branch
                  --head $SOURCE_BRANCH

    deploy:
        name: Deploy to nuget.org
        runs-on: macos-14
        needs: build-and-test
        if: github.event_name == 'workflow_dispatch'
        steps:
            - uses: actions/checkout@v4
            - name: Setup .NET
              uses: actions/setup-dotnet@v4
              with:
                  dotnet-version: 8.0.x
            - name: Increment version
              run: |
                cd src/xpd
                dotnet tool install versionize
                dotnet versionize
            - name: Push version & changelog
              run: |
                  CURRENT_DATETIME=$(date +'%Y-%m-%d-%H-%M-%S')
                  BRANCH_NAME="auto/release-$CURRENT_DATETIME"
                  git config --global user.name "github-actions[bot]"
                  git config --global user.email "github-actions[bot]@users.noreply.github.com"
                  git push --follow-tags origin HEAD:$BRANCH_NAME
            - name: Pack as tool
              run: dotnet pack --configuration Release
#            - name: Deploy to NuGet
#              run: dotnet nuget push src/xpd/nukpg/xpd.*.nupkg --api-key ${{ secrets.NUGET_API_KEY }} --source https://api.nuget.org/v3/index.json